<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WGP.NET-TEXT</name>
    </assembly>
    <members>
        <member name="T:WGP.TEXT.Font">
            <summary>
            Similar to the SFML font, except it may crash ONLY at the creation, not when requesting a glyph or other methods. So it crashes less than the original and not in-game, but takes more memory.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Font.Info">
            <summary>
            Gets the font infos.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Font.LineSpacing">
            <summary>
            Gets the line spacing.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Font.UnderlinePosition">
            <summary>
            Gets the underline position of the font.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Font.UnderlineThickness">
            <summary>
            Gets the underline thickness of the line.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Font.CharSize">
            <summary>
            Gets the character size defined at the creation (not modifiable, sadly).
            </summary>
        </member>
        <member name="P:WGP.TEXT.Font.Texture">
            <summary>
            Gets the font texture.
            </summary>
        </member>
        <member name="M:WGP.TEXT.Font.GetGlyph(System.Char,System.Boolean)">
            <summary>
            Gets a specific glyph. The glyphs are already stored at the beginning, so it won't crash.
            </summary>
            <param name="code">ASCII code.</param>
            <param name="bold">True if the glyph is bold.</param>
            <returns>Requested glyph.</returns>
        </member>
        <member name="M:WGP.TEXT.Font.#ctor(System.String,System.UInt32,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="path">Path of the file.</param>
            <param name="charSize">Character size.</param>
            <param name="outline">Outline thickness (Optional).</param>
        </member>
        <member name="M:WGP.TEXT.Font.#ctor(System.IO.Stream,System.UInt32,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="stream">Input stream.</param>
            <param name="charSize">Character size.</param>
            <param name="outline">Outline thickness (Optional).</param>
        </member>
        <member name="M:WGP.TEXT.Font.#ctor(System.Byte[],System.UInt32,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="data">Input data.</param>
            <param name="charSize">Character size.</param>
            <param name="outline">Outline thickness (Optional).</param>
        </member>
        <member name="T:WGP.TEXT.RichText">
            <summary>
            Rendering class to build advanced SFML text with properties.
            </summary>
        </member>
        <member name="T:WGP.TEXT.RichText.Part">
            <summary>
            A part of the final text.
            </summary>
        </member>
        <member name="F:WGP.TEXT.RichText.Part.Text">
            <summary>
            The text of the part.
            </summary>
        </member>
        <member name="F:WGP.TEXT.RichText.Part.Color">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="F:WGP.TEXT.RichText.Part.CornersColor">
            <summary>
            The corner colors of the text. If set not set, the color used will be the property Color.
            </summary>
        </member>
        <member name="F:WGP.TEXT.RichText.Part.Style">
            <summary>
            The style of the text;
            </summary>
        </member>
        <member name="P:WGP.TEXT.RichText.MaxWidth">
            <summary>
            The maximum width of the text. Once the text is at the maximum, it will add automatically a new line. Set to 0 or under to disable.
            </summary>
        </member>
        <member name="P:WGP.TEXT.RichText.CharacterSize">
            <summary>
            The size of the characters.
            </summary>
        </member>
        <member name="P:WGP.TEXT.RichText.Font">
            <summary>
            The font used.
            </summary>
        </member>
        <member name="M:WGP.TEXT.RichText.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:WGP.TEXT.RichText.AddPart(WGP.TEXT.RichText.Part)">
            <summary>
            Adds a part to the text.
            </summary>
            <param name="part">Part of the text to add.</param>
        </member>
        <member name="M:WGP.TEXT.RichText.PointOn(SFML.System.Vector2f)">
            <summary>
            Returns an index of the part pointed on by <paramref name="point"/>. Returns -1 if it's not pointing any text. 
            </summary>
            <param name="point">Point to test.</param>
            <returns></returns>
        </member>
        <member name="M:WGP.TEXT.RichText.Generate">
            <summary>
            Generates the buffer to draw the text.
            </summary>
        </member>
        <member name="M:WGP.TEXT.RichText.GetLocalBounds">
            <summary>
            Returns the transformed bounding box.
            </summary>
            <returns>Global bounding box.</returns>
        </member>
        <member name="M:WGP.TEXT.RichText.GetGlobalBounds">
            <summary>
            Returns the bounding box (without transformations).
            </summary>
            <returns>Bouding box.</returns>
        </member>
        <member name="M:WGP.TEXT.RichText.Clear">
            <summary>
            Empties the stored parts.
            </summary>
        </member>
        <member name="T:WGP.TEXT.Text">
            <summary>
            Like the SFML.Graphics.Text, it draws text. It is used as an alternate way of generating text because the SFML.System.Text is bugged.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Text.String">
            <summary>
            String to display.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Text.Font">
            <summary>
            The used font.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Text.CharSize">
            <summary>
            The character size.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Text.Color">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Text.CornersColor">
            <summary>
            The color of the 4 corners of each glyph.
            </summary>
        </member>
        <member name="P:WGP.TEXT.Text.Style">
            <summary>
            The style of the text.
            </summary>
        </member>
        <member name="M:WGP.TEXT.Text.#ctor(System.String,WGP.TEXT.Font,SFML.Graphics.Color,SFML.Graphics.Text.Styles)">
            <summary>
            Constructor.
            </summary>
            <param name="text">Text to display.</param>
            <param name="font">The used font.</param>
            <param name="color">The color of the text.</param>
            <param name="styles">The style of the text.</param>
        </member>
        <member name="M:WGP.TEXT.Text.Update">
            <summary>
            Updates the internal components. Shouldn't be used normaly.
            </summary>
        </member>
        <member name="M:WGP.TEXT.Text.GetLocalBounds">
            <summary>
            Returns the local bounds of the text.
            </summary>
            <returns>Local bounds.</returns>
        </member>
        <member name="M:WGP.TEXT.Text.GetGlobalBounds">
            <summary>
            Returns the global bounds of the text.
            </summary>
            <returns>The global bounds.</returns>
        </member>
        <member name="M:WGP.TEXT.Text.FindCharacterPos(System.UInt32)">
            <summary>
            Returns a specified character position. The position is in its local bounds.
            </summary>
            <param name="pos">Character to find.</param>
            <returns>Character position.</returns>
        </member>
    </members>
</doc>
